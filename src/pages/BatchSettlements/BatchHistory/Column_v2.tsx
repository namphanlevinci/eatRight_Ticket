import { TableColumnsType } from 'antd';
import dayjs from 'dayjs';
import { BatchSettleItem } from 'graphql/batchSettlements/batchHistory';

export const Columns = ({
    setShowModal,
    setData,
}: {
    setShowModal: any;
    setData: any;
}): TableColumnsType<BatchSettleItem> => {
    return [
        {
            title: 'Batch ID',
            dataIndex: 'batch_id',
            key: 'batch_id',
            width: 200,
            render: (batch_id) => {
                return (
                    <div style={{ color: 'var(--text-primary)', fontSize: 16 }}>
                        #{batch_id}
                    </div>
                );
            },
        },
        {
            title: 'Date',
            dataIndex: 'date',
            key: 'date',
            width: 100,
            render: (date) => {
                return (
                    <div style={{ fontSize: 16 }}>
                        {dayjs(date).format('YYYY-MM-DD')}
                    </div>
                );
            },
        },
        {
            title: 'Time',
            dataIndex: 'time',
            key: 'time',
            width: 100,
            render: (time) => {
                return <div style={{ fontSize: 16 }}>{time}</div>;
            },
        },
        {
            title: 'Total',
            dataIndex: 'total_amount',
            key: 'total_amount',
            width: 100,
            render: (total_amount) => {
                return (
                    <div
                        style={{
                            fontWeight: '600',
                            fontSize: 17,
                        }}
                    >
                        ${total_amount?.value}
                    </div>
                );
            },
        },
        {
            title: '',
            dataIndex: 'batch_id',
            key: 'batch_id',
            width: 50,
            align: 'right',
            render: (batch_id) => {
                return (
                    <div
                        onClick={() => {
                            setShowModal(true);
                            setData(batch_id);
                        }}
                        style={{ cursor: 'pointer' }}
                    >
                        <PrintBillIcon />
                    </div>
                );
            },
        },
    ];
};

const PrintBillIcon = () => {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            width="40"
            height="40"
            viewBox="0 0 40 40"
            fill="none"
        >
            <rect
                x="0.5"
                y="0.5"
                width="39"
                height="39"
                rx="5.5"
                fill="white"
                stroke="#389E0D"
            />
            <path
                d="M25.1578 10.4763C25.4432 10.4762 25.7185 10.5814 25.931 10.7718C26.1435 10.9621 26.2783 11.2243 26.3094 11.5079L26.3157 11.6342V14.6868H27.3684C28.1739 14.6868 28.9489 14.9946 29.535 15.5471C30.121 16.0997 30.4737 16.8554 30.521 17.6595L30.5263 17.8447V25.2132C30.5264 25.7443 30.3258 26.2559 29.9647 26.6453C29.6035 27.0348 29.1085 27.2733 28.5789 27.3132L28.421 27.3184H26.3157V29.3184C26.3159 29.6037 26.2107 29.8791 26.0203 30.0916C25.8299 30.3041 25.5678 30.4389 25.2842 30.47L25.1578 30.4763H14.8421C14.5567 30.4765 14.2814 30.3713 14.0689 30.1809C13.8564 29.9905 13.7216 29.7284 13.6905 29.4447L13.6842 29.3184V27.3184H11.5789C11.0478 27.3186 10.5362 27.118 10.1467 26.7568C9.75729 26.3957 9.51873 25.9007 9.4789 25.3711L9.47363 25.2132V17.8447C9.47359 17.0393 9.78134 16.2642 10.3339 15.6781C10.8865 15.0921 11.6422 14.7394 12.4463 14.6921L12.6315 14.6868H13.6842V11.6342C13.684 11.3489 13.7892 11.0736 13.9796 10.861C14.17 10.6485 14.4321 10.5138 14.7157 10.4826L14.8421 10.4763H25.1578ZM24.2105 24.1605H15.7894V28.3711H24.2105V24.1605ZM27.3684 16.7921H12.6315C12.3737 16.7921 12.1249 16.8868 11.9322 17.0581C11.7395 17.2294 11.6164 17.4655 11.5863 17.7216L11.5789 17.8447V25.2132H13.6842V23.2132C13.684 22.9278 13.7892 22.6525 13.9796 22.44C14.17 22.2275 14.4321 22.0927 14.7157 22.0616L14.8421 22.0553H25.1578C25.4432 22.0551 25.7185 22.1603 25.931 22.3507C26.1435 22.5411 26.2783 22.8032 26.3094 23.0868L26.3157 23.2132V25.2132H28.421V17.8447C28.421 17.5656 28.3101 17.2978 28.1127 17.1004C27.9153 16.903 27.6475 16.7921 27.3684 16.7921ZM25.2631 17.8447C25.5314 17.845 25.7895 17.9478 25.9845 18.1319C26.1796 18.3161 26.297 18.5678 26.3128 18.8357C26.3285 19.1035 26.2413 19.3672 26.0691 19.573C25.8969 19.7787 25.6527 19.9109 25.3863 19.9426L25.2631 19.95H23.1578C22.8895 19.9497 22.6315 19.847 22.4364 19.6628C22.2413 19.4786 22.1239 19.2269 22.1082 18.9591C22.0925 18.6912 22.1796 18.4275 22.3518 18.2218C22.524 18.016 22.7683 17.8838 23.0347 17.8521L23.1578 17.8447H25.2631ZM24.2105 12.5816H15.7894V14.6868H24.2105V12.5816Z"
                fill="#389E0D"
            />
        </svg>
    );
};
