import { useLazyQuery } from '@apollo/client';
import { Spin } from 'antd';
import { Text } from 'components/atom/Text';
import { BASE_ROUTER } from 'constants/router';
import { GET_TERMINALS_LIST } from 'graphql/Terminal';
import React, { useEffect } from 'react';
import { useNavigate } from 'react-router';
import { TerminalContainer } from '../styled';
import { useSelector } from 'react-redux';
import { RootState } from 'store';
type PosTerminal = {
    entity_id: string;

    name: string;
    status: boolean;
};
export default function RenderList() {
    const [onGetList, { loading, data }] = useLazyQuery(GET_TERMINALS_LIST);
    const { primary_terminal_setting } = useSelector(
        (state: RootState) => state.auth,
    );
    useEffect(() => {
        onGetList({
            fetchPolicy: 'no-cache',
        });
    }, []);

    const navigation = useNavigate();
    const goDetail = (pos: PosTerminal) => {
        navigation(
            `${BASE_ROUTER.RESTAURENT_TERMINAL_DETAIL}?id=${pos.entity_id}`,
        );
    };
    return (
        <>
            {loading ? (
                <Spin />
            ) : (
                data?.getPosDevices?.items?.map(
                    (item: PosTerminal, index: number) => (
                        <TerminalItem
                            item={item}
                            onClick={() => goDetail(item)}
                            key={index}
                            isPrimary={
                                `${primary_terminal_setting}` ===
                                `${item.entity_id}`
                            }
                        />
                    ),
                )
            )}
        </>
    );
}

const TerminalItem = ({
    item,
    onClick,
    isPrimary,
}: {
    item: any;
    onClick: any;
    isPrimary?: boolean;
}) => {
    return (
        <TerminalContainer onClick={onClick} style={{ position: 'relative' }}>
            {isPrimary && (
                <div
                    style={{
                        position: 'absolute',
                        top: 18,
                        left: 0,
                        height: 26,
                        width: 84,
                        display: 'flex',
                        justifyContent: 'center',
                        alignItems: 'center',
                        background: '#389E0D',
                        borderTopRightRadius: 2,
                        borderBottomRightRadius: 2,
                    }}
                >
                    <Text style={{ color: '#fff' }}>Primary</Text>
                </div>
            )}
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="82"
                height="82"
                viewBox="0 0 82 82"
                fill="none"
            >
                <circle cx="41" cy="41" r="41" fill="#F0F3F7" />
                <path
                    d="M55.973 36.5801L55.4928 27.7402C55.4928 26.5943 54.6124 25.694 53.572 25.4484L52.0513 24.9573L51.8112 20.3737C51.8112 19.0641 50.6907 18 49.4101 18H30.4416C29.161 18 28.1205 18.9822 28.0405 20.3737L27.7203 25.694C27.7203 26.1851 28.0405 26.5125 28.4406 26.5943C28.8408 26.5943 29.241 26.2669 29.321 25.8577L29.6412 20.5374C29.6412 20.1281 30.0414 19.7189 30.4416 19.7189H31.6421L32.0423 21.847C32.2023 22.5836 32.8426 23.1566 33.643 23.1566H46.2086C47.009 23.1566 47.6493 22.5836 47.8094 21.847L48.2096 19.7189H49.4101C49.8103 19.7189 50.2105 20.0463 50.2105 20.5374C50.2105 21.1103 51.331 38.2171 51.1709 38.2989L50.2105 49.8399C50.2105 50.331 50.5306 50.6584 50.9308 50.7402C51.331 50.7402 51.7311 50.4128 51.8112 50.0036L52.7716 38.4626C52.9317 37.726 52.2114 27.8221 52.2114 26.758L53.2518 27.1673C53.652 27.1673 53.8921 27.5765 53.8921 27.9858C53.8921 29.4591 54.5324 37.4804 54.3723 38.7082L53.0917 54.2598C53.0917 54.669 52.7716 54.9146 52.4515 54.9964L51.331 55.4057L51.491 53.2776C51.491 52.7865 51.1709 52.4591 50.7707 52.3772C50.3705 52.3772 49.9703 52.7046 49.8903 53.1139L49.17 61.5445C49.17 61.9537 48.7698 62.2811 48.3696 62.2811H31.3219C30.9218 62.2811 30.5216 61.9537 30.5216 61.5445L28.6007 38.2989C28.6007 37.8897 28.6007 37.3986 28.6007 36.9893L29.0809 29.1317C29.0809 28.6406 28.7608 28.3132 28.2806 28.3132C27.8804 28.3132 27.4802 28.6406 27.4802 29.0498L27 36.9075C27 37.3986 27 37.8897 27 38.4626L28.9209 61.7082C29.0009 63.0178 30.0414 64 31.3219 64H48.3696C49.6502 64 50.6907 63.0178 50.7707 61.7082L51.1709 57.0427L52.7716 56.5516C53.8121 56.3061 54.6124 55.4057 54.6925 54.3416C54.7725 53.032 56.2132 37.5623 55.973 36.6619V36.5801ZM46.1286 21.5196H33.563L33.2428 19.7189H46.5288L46.2086 21.5196H46.1286ZM46.1286 36.9075C47.009 36.9075 47.7293 36.1708 47.7293 35.2705V26.5943C47.7293 25.694 47.009 24.9573 46.1286 24.9573H33.643C32.7626 24.9573 32.0423 25.694 32.0423 26.5943V35.2705C32.0423 36.1708 32.7626 36.9075 33.643 36.9075H46.1286ZM33.563 26.5943H46.0486V35.2705H33.563V26.5943ZM31.6421 39.1993H48.0495C48.5297 39.1993 48.8498 39.5267 48.8498 40.0178C48.8498 40.5089 48.5297 40.8363 48.0495 40.8363H31.6421C31.1619 40.8363 30.8417 40.5089 30.8417 40.0178C30.8417 39.5267 31.1619 39.1993 31.6421 39.1993ZM35.6439 46.2384C35.6439 46.9751 35.0036 47.6299 34.2833 47.6299H32.9227C32.2023 47.6299 31.5621 46.9751 31.5621 46.2384V44.847C31.5621 44.1103 32.2023 43.4555 32.9227 43.4555H34.2833C35.0036 43.4555 35.6439 44.1103 35.6439 44.847V46.2384ZM41.8867 46.2384C41.8867 46.9751 41.2464 47.6299 40.5261 47.6299H39.1655C38.4452 47.6299 37.8049 46.9751 37.8049 46.2384V44.847C37.8049 44.1103 38.4452 43.4555 39.1655 43.4555H40.5261C41.2464 43.4555 41.8867 44.1103 41.8867 44.847V46.2384ZM48.1295 44.847V46.2384C48.1295 46.9751 47.4892 47.6299 46.7689 47.6299H45.4083C44.688 47.6299 44.0477 46.9751 44.0477 46.2384V44.847C44.0477 44.1103 44.688 43.4555 45.4083 43.4555H46.7689C47.4892 43.4555 48.1295 44.1103 48.1295 44.847ZM35.6439 52.6228C35.6439 53.3594 35.0036 54.0142 34.2833 54.0142H32.9227C32.2023 54.0142 31.5621 53.3594 31.5621 52.6228V51.2313C31.5621 50.4947 32.2023 49.8399 32.9227 49.8399H34.2833C35.0036 49.8399 35.6439 50.4947 35.6439 51.2313V52.6228ZM41.8867 52.6228C41.8867 53.3594 41.2464 54.0142 40.5261 54.0142H39.1655C38.4452 54.0142 37.8049 53.3594 37.8049 52.6228V51.2313C37.8049 50.4947 38.4452 49.8399 39.1655 49.8399H40.5261C41.2464 49.8399 41.8867 50.4947 41.8867 51.2313V52.6228ZM48.1295 51.2313V52.6228C48.1295 53.3594 47.4892 54.0142 46.7689 54.0142H45.4083C44.688 54.0142 44.0477 53.3594 44.0477 52.6228V51.2313C44.0477 50.4947 44.688 49.8399 45.4083 49.8399H46.7689C47.4892 49.8399 48.1295 50.4947 48.1295 51.2313ZM35.6439 57.6157V59.0071C35.6439 59.7438 35.0036 60.3986 34.2833 60.3986H32.9227C32.2023 60.3986 31.5621 59.7438 31.5621 59.0071V57.6157C31.5621 56.879 32.2023 56.2242 32.9227 56.2242H34.2833C35.0036 56.2242 35.6439 56.879 35.6439 57.6157ZM41.8867 57.6157V59.0071C41.8867 59.7438 41.2464 60.3986 40.5261 60.3986H39.1655C38.4452 60.3986 37.8049 59.7438 37.8049 59.0071V57.6157C37.8049 56.879 38.4452 56.2242 39.1655 56.2242H40.5261C41.2464 56.2242 41.8867 56.879 41.8867 57.6157ZM48.1295 57.6157V59.0071C48.1295 59.7438 47.4892 60.3986 46.7689 60.3986H45.4083C44.688 60.3986 44.0477 59.7438 44.0477 59.0071V57.6157C44.0477 56.879 44.688 56.2242 45.4083 56.2242H46.7689C47.4892 56.2242 48.1295 56.879 48.1295 57.6157Z"
                    fill="#1D2433"
                />
            </svg>
            <Text
                style={{
                    fontWeight: '600',
                    fontSize: 20,
                    marginTop: 12,
                }}
            >
                {item.name}
            </Text>
            <Text
                style={{
                    fontSize: 16,
                }}
            >
                {item.serial_number}
            </Text>
        </TerminalContainer>
    );
};
